{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","constants.js","containers/App.js","action.js","reducers.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"gQAeeA,EAbF,SAACC,GAAW,IACbC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKJC,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACjB,GACd,OACE,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGrB,EAAMsB,YCiBEC,E,kDAnBb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXC,UAAU,GAHK,E,8DAODC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACN,2DAEFG,KAAK5B,MAAMsB,a,GAhBKQ,aCFdC,G,MAAsB,uBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAwB,wBCsB/BC,E,kLAGFP,KAAK5B,MAAMoC,oB,+BAGH,IAAD,EACoDR,KAAK5B,MAAxDqC,EADD,EACCA,YAAaC,EADd,EACcA,eAAgB9B,EAD9B,EAC8BA,OAAQ+B,EADtC,EACsCA,UACvCC,EAAiBhC,EAAOiC,QAAO,SAAAC,GACnC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASP,EAAYM,kBAErD,OAAOJ,EACP,4CAEE,sBAAKnC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcyB,IACzB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU9B,OAAQgC,e,GAnBdV,aA2BHe,eA3CS,SAAArB,GACtB,MAAO,CACLa,YAAab,EAAMsB,aAAaT,YAChC7B,OAAQgB,EAAMuB,cAAcvC,OAC5B+B,UAAWf,EAAMuB,cAAcR,UAC/Bb,MAAOF,EAAMuB,cAAcrB,UAIJ,SAACsB,GAC1B,MAAO,CACLV,eAAgB,SAACW,GAAD,OAAWD,GCdAE,EDcwBD,EAAME,OAAOC,MCd3B,CACrCtC,KAAMiB,EACNsB,QAASH,KAFiB,IAACA,GDe3Bd,gBAAiB,kBAAMY,GCVQ,SAACA,GAClCA,EAAS,CAAElC,KAAMkB,IACjBsB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIV,EAAS,CAAElC,KAAMmB,EAAwBoB,QAASK,OAC/DC,OAAM,SAAAjC,GAAK,OAAIsB,EAAS,CAAElC,KAAMoB,EAAuBmB,QAAS3B,cDoCtDmB,CAA6CV,GE9CtDyB,EAAqB,CACzBvB,YAAa,IAcTwB,EAAqB,CACzBtB,WAAW,EACX/B,OAAQ,GACRkB,MAAO,ICbHoC,G,MAASC,0BAETC,EAAcC,YAAgB,CAAEnB,aDHV,WAA0C,IAAzCtB,EAAwC,uDAAlCoC,EAAoBM,EAAc,uDAAP,GAE5D,OAAOA,EAAOpD,MACZ,KAAKiB,EACH,OAAOoC,OAAOC,OAAO,GAAI5C,EAAO,CAAEa,YAAa6B,EAAOb,UAExD,QACE,OAAO7B,ICJuCuB,cDcvB,WAA0C,IAAzCvB,EAAwC,uDAAlCqC,EAAoBK,EAAc,uDAAP,GAC7D,OAAOA,EAAOpD,MACZ,KAAKkB,EACH,OAAOmC,OAAOC,OAAO,GAAI5C,EAAO,CAAEe,WAAW,IAC/C,KAAKN,EACH,OAAOkC,OAAOC,OAAO,GAAI5C,EAAO,CAAEhB,OAAQ0D,EAAOb,QAASd,WAAW,IACvE,KAAKL,EACH,OAAOiC,OAAOC,OAAO,GAAI5C,EAAO,CAAEE,MAAOwC,EAAOb,QAASd,WAAW,IACtE,QACE,OAAOf,MCtBP6C,EACNC,YAAYN,EAAaO,YAAgBC,IAAiBV,IAG1DW,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.aaaf8a40.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n    const { name, email, id } = props;\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n\n// Card component displays individual data, name, email","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n              key={i} \n              id={robots[i].id} \n              name={robots[i].name} \n              email={robots[i].email} \n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n  return (\n    <div className='pa2'>\n      <input \n        className='pa3 ba b--green bg-lightest-blue'\n        type='search' \n        placeholder='Search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n      {props.children}\n    </div>\n  )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops. That is not good!</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundry;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css'\n\nimport { requestRobots, setSearchField } from '../action';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  }\n}\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onRequestRobots()\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n      return isPending ? \n      <h1>Loading...</h1> :\n    (\n        <div className='tc'>\n          <h1 className='f1'>RoboFriends</h1>\n          <SearchBox searchChange={onSearchChange}/>\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots}/>\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { \n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED \n} from './constants.js';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n})\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","import { \n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED \n} from './constants.js';\n\nconst initialStateSearch = {\n  searchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n  // console.log(action.type);\n  switch(action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n      // return { ...state, searchField: action.payload }\n    default:\n      return state;\n  }\n}\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n  switch(action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, { robots: action.payload, isPending: false });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, { error: action.payload, isPending: false });\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App'\n//\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = \ncreateStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n// const store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store} >\n    <App/>\n  </Provider>, \n  document.getElementById('root'));\n//\n"],"sourceRoot":""}